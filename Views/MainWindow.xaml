<Window x:Class="NetEase.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NetEase"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:NetEase.ViewModels"
        xmlns:converters="clr-namespace:NetEase.Converters"
        xmlns:pages="clr-namespace:NetEase.Views.Pages"
        xmlns:components="clr-namespace:NetEase.Views.Components"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        Title="MainWindow"
        Height="820"
        Width="1380">

    <Window.Resources>
        <Style x:Key="ModernScrollViewerStyle"
                TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <!-- 1. 内容区域 -->
                            <ScrollContentPresenter CanContentScroll="True"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       HorizontalAlignment="Right"
                                       Opacity="0"
                                       Width="2">
                                <!-- 包含一些空白区域，更容易悬浮 -->
                                <ScrollBar.Style>
                                    <Style TargetType="ScrollBar">
                                        <Setter Property="Background"
                                                Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ScrollBar">
                                                    <!-- Thumb 是滚动条可拖动的部分 -->
                                                    <Thumb Width="6"
                                                           HorizontalAlignment="Center"
                                                           Background="#88FFFFFF"
                                                           Opacity="0.6">
                                                        <Thumb.Style>
                                                            <Style TargetType="Thumb">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="Thumb">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    CornerRadius="3"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollBar.Style>
                            </ScrollBar>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- 当鼠标悬浮在整个 ScrollViewer 区域时 -->
                            <Trigger Property="IsMouseOver"
                                    Value="True">
                                <!-- 使用动画让滚动条淡入 -->
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                    Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <!-- 鼠标离开时，让滚动条淡出 -->
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                    Duration="0:0:0.3"/>
                                            <!-- 离开时稍慢一点 -->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 数据模板：将ViewModel自动映射到对应的View -->
        <!-- 文件: MainWindow.xaml -->
        <!-- ... (您已有的 DataTemplate) ... -->
        <DataTemplate DataType="{x:Type vm:FeaturedViewModel}">
            <pages:FeaturedView/>
        </DataTemplate>


        <DataTemplate DataType="{x:Type vm:FriendsViewModel}">
            <pages:FriendsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LocalMusicViewModel}">
            <pages:LocalMusicView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:PodcastViewModel}">
            <pages:PodcastView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MyFavoriteMusicViewModel}">
            <pages:MyFavoriteMusicView/>
        </DataTemplate>
        <!-- ================== 自定义悬浮显示滚动条的样式 ================== -->
        <Style x:Key="OverlayScrollViewerStyle"
               TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <ScrollContentPresenter CanContentScroll="True"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       HorizontalAlignment="Right"
                                       Opacity="0"
                                       Width="8">
                                <ScrollBar.Style>
                                    <Style TargetType="ScrollBar">
                                        <Setter Property="Background"
                                                Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ScrollBar">
                                                    <!-- Thumb 是滚动条可拖动的部分 -->
                                                    <Thumb Width="4"
                                                           HorizontalAlignment="Center"
                                                           Background="#88FFFFFF"
                                                           Opacity="0.5">
                                                        <Thumb.Template>
                                                            <ControlTemplate TargetType="Thumb">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        CornerRadius="2"/>
                                                            </ControlTemplate>
                                                        </Thumb.Template>
                                                    </Thumb>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollBar.Style>
                            </ScrollBar>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- 当鼠标悬浮在整个 ScrollViewer 区域时 -->
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <!-- 使用动画让滚动条淡入 -->
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <!-- 鼠标离开时，让滚动条淡出 -->
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 默认导航按钮样式 -->
        <Style x:Key="NavButtonStyle"
               TargetType="Button">
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="Foreground"
                    Value="#CCCCCC"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="FontSize"
                    Value="16"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Left"/>
            <Setter Property="Padding"
                    Value="15,12"/>
            <Setter Property="Margin"
                    Value="1,2"/>
            <Setter Property="Cursor"
                    Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ControlTemplate.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize"
                                        Value="15"/>
                                <Style.Triggers>
                                    <Trigger Property="FontFamily"
                                             Value="Segoe MDL2 Assets">
                                        <Setter Property="FontSize"
                                                Value="20"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>

                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Stretch"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ================== 1. 创建可复用的导航项模板 ================== -->
        <ControlTemplate x:Key="NavigationItemTemplate"
                TargetType="ContentControl">
            <Border x:Name="border"
                    Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                    CornerRadius="6"
                    Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}">
                <!-- 
            使用 TextElement 附加属性来传递 Foreground 和 FontWeight
            这样模板内部的 TextBlock 就能继承这些值
        -->
                <ContentPresenter HorizontalAlignment="Stretch"
                                  TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                  TextElement.FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Border>
        </ControlTemplate>
        <!-- 分区标题文字样式 -->
        <Style x:Key="SectionHeaderStyle"
               TargetType="TextBlock">
            <Setter Property="Foreground"
                    Value="#888888"/>
            <Setter Property="FontSize"
                    Value="13"/>
            <Setter Property="Margin"
                    Value="20,25,20,10"/>
        </Style>

        <!-- 新的、用于导航 ListBoxItem 的样式 -->
        <Style x:Key="NavListBoxItemStyle"
                TargetType="ListBoxItem">
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="Foreground"
                    Value="#CCCCCC"/>
            <Setter Property="Margin"
                    Value="0,2"/>
            <Setter Property="Padding"
                    Value="15,12"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}"
                        Value="True">
                    <Setter Property="Background"
                            Value="#EC4141"/>
                    <Setter Property="Foreground"
                            Value="White"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected}"
                                Value="False"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background"
                            Value="#333333"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlaylistListBoxItemStyle"
                TargetType="ListBoxItem">
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="Foreground"
                    Value="#CCCCCC"/>
            <Setter Property="Padding"
                    Value="15,5"/>
            <Setter Property="Margin"
                    Value="10,2"/>
            <Setter Property="Height"
                    Value="45"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="ItemBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}"
                        Value="True">
                    <Setter Property="Background"
                            Value="#EC4141"/>
                    <Setter Property="Foreground"
                            Value="White"/>
                </DataTrigger>

                <!-- 只在【未选中】时应用悬浮效果 -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected}"
                                Value="False"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background"
                            Value="#333333"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <!-- 在 MainWindow.xaml 的 <Window.Resources> 中 -->

        <!-- 为 ToggleButton 创建一个专门的导航样式 -->
        <Style x:Key="NavToggleButtonSyle"
                TargetType="ToggleButton">
            <!-- 这里的所有 Setter 都和 NavButtonStyle 完全一样 -->
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="Foreground"
                    Value="#CCCCCC"/>
            <Setter Property="BorderThickness"
                    Value="0"/>
            <Setter Property="FontSize"
                    Value="16"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Left"/>
            <Setter Property="Padding"
                    Value="15,12"/>
            <Setter Property="Margin"
                    Value="10,2"/>
            <Setter Property="Cursor"
                    Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <!-- 模板内部的资源也保持不变 -->
                        <ControlTemplate.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize"
                                        Value="15"/>
                                <Style.Triggers>
                                    <Trigger Property="FontFamily"
                                            Value="Segoe MDL2 Assets">
                                        <Setter Property="FontSize"
                                                Value="20"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>

                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Stretch"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Trigger 的 Property 也保持不变 -->
                            <Trigger Property="IsMouseOver"
                                    Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ================== 自定义导航 Expander 样式 ================== -->
        <Style x:Key="NavExpanderStyle"
                TargetType="Expander">
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="Foreground"
                    Value="#CCCCCC"/>
            <Setter Property="BorderThickness"
                    Value="0"/>
            <Setter Property="Padding"
                    Value="15,12"/>
            <Setter Property="Margin"
                    Value="10,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <DockPanel>
                            <!-- 1. 头部区域 -->
                            <ToggleButton DockPanel.Dock="Top"
                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource NavToggleButtonSyle}">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- 头部内容 (例如 "更多") -->
                                    <ContentPresenter Grid.Column="0"
                                            ContentSource="Header"/>

                                    <!-- 展开/折叠的箭头 -->
                                    <TextBlock x:Name="Arrow"
                                            Grid.Column="1"
                                               Text="&#xE70D;"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="12"
                                               VerticalAlignment="Center"/>
                                </Grid>
                            </ToggleButton>

                            <!-- 2. 内容区域 (带动画) -->
                            <ContentPresenter x:Name="ContentSite"
                                              DockPanel.Dock="Bottom"
                                              Visibility="Collapsed"
                                              Margin="20,0,0,0"/>
                            <!-- 内容向右缩进 -->
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <!-- 当展开时 -->
                            <Trigger Property="IsExpanded"
                                    Value="True">
                                <!-- 箭头旋转 -->
                                <Setter TargetName="Arrow"
                                        Property="Text"
                                        Value="&#xE70E;"/>
                                <!-- ChevronUp -->
                                <!-- 内容区域变为可见 -->
                                <Setter TargetName="ContentSite"
                                        Property="Visibility"
                                        Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Header">
                <Setter.Value>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="..."
                                FontFamily="Segoe UI Symbol"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Margin="0,-4,0,0"/>
                        <TextBlock Text="更多"
                                Margin="15,0,0,0"
                                VerticalAlignment="Center"/>
                    </StackPanel>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Thumb 样式（通用） -->
        <Style x:Key="ScrollBarThumbStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True"/>
            <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="ThumbRect"
                                   Fill="Blue"
                                   RadiusX="2"
                                   RadiusY="2"
                                   Stroke="DarkBlue"
                                   StrokeThickness="1"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="ThumbRect"
                                        Property="Fill"
                                        Value="LightBlue"/>
                            </Trigger>
                            <Trigger Property="IsDragging"
                                     Value="True">
                                <Setter TargetName="ThumbRect"
                                        Property="Fill"
                                        Value="DarkBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 轨道页按钮样式（透明） -->
        <Style x:Key="ScrollBarPageButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True"/>
            <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 线按钮样式（箭头） -->
        <Style x:Key="ScrollBarLineButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True"/>
            <Setter Property="OverridesDefaultStyle"
                    Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border"
                                Margin="1"
                                CornerRadius="2"
                                Background="LightGray"
                                BorderBrush="Gray"
                                BorderThickness="1">
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="Black"
                                  Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 垂直 ScrollBar 模板 -->
        <ControlTemplate x:Key="VerticalScrollBarTemplate"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
                        CornerRadius="2"
                        Background="#F0F0F0"/>
                <RepeatButton Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButtonStyle}"
                              Height="18"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z"/>
                <Track Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}"
                                      Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"
                               Margin="1,0,1,0"
                               Width="8"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}"
                                      Command="ScrollBar.PageDownCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2"
                              Style="{StaticResource ScrollBarLineButtonStyle}"
                              Height="18"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>


       
    </Window.Resources>
    <!-- 主容器，使用圆角边框包裹 -->
    <Border CornerRadius="8"
            Background="#212121"
            BorderBrush="#333"
            BorderThickness="0"
            ClipToBounds="True">
        <Grid ShowGridLines="True">

            <Grid ShowGridLines="True"
                  x:Name="MainContentGrid">
                <!-- 关键：为主内容 Grid 添加 Style -->
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <!-- 当 IsOverlayVisible 为 True 时 -->
                            <DataTrigger Binding="{Binding IsOverlayVisible}"
                                         Value="True">
                                <!-- 为自己应用模糊效果 -->
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="20"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <!-- 顶部自定义标题栏区域 (可选，此处简化，可添加拖动和最小化/关闭按钮) -->
                    <RowDefinition Height="Auto"/>
                    <!-- 主内容区域 -->
                    <RowDefinition Height="*"/>
                    <!-- 底部播放器控制条 -->
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- 1. 自定义标题栏 (简化实现) -->
                <components:TitleBarView Grid.Row="0"
                                         DataContext="{Binding TitleBarVM}"/>

                <!-- 2. 主内容区域 (Grid.Row="1") -->
                <Grid Grid.Row="1"
                      ShowGridLines="True">
                    <Grid.ColumnDefinitions>
                        <!-- 左侧导航栏，固定宽度 -->
                        <ColumnDefinition Width="Auto"/>
                        <!-- 右侧主视图，占据剩余空间 -->
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- ========================== -->
                    <!-- 左侧导航栏 (Grid.Column="0") -->
                    <!-- ========================== -->

                    <ScrollViewer Grid.Column="0"
                                  Style="{StaticResource for_scrollviewer}"
                                  x:Name="LeftNavScrollViewer" 
                                  VerticalScrollBarVisibility="Auto">
                        <Grid Background="#2D2D30"
                              ShowGridLines="True">
                            <!-- 使用 StackPanel 实现垂直列布局 -->
                            <StackPanel x:Name="NavStackPanel" 
                                        VerticalAlignment="Top"
                                        Margin="10,20,10,10">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Width" Value="200"/>
                                        <!-- 默认展开宽度 -->
                                        <Style.Triggers>
                                            <!-- 当 IsLeftSidebarExpanded 为 false 时，改变宽度 -->
                                            <DataTrigger Binding="{Binding DataContext.IsLeftSidebarExpanded, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                                <Setter Property="Width" Value="60"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <!-- 在顶部添加一个用于切换的按钮 -->
                                <Button Command="{Binding ToggleLeftSidebarCommand}" HorizontalAlignment="Left" Style="{StaticResource NavButtonStyle}" Padding="10">
                                    <TextBlock Text="&#xE700;" FontFamily="Segoe MDL2 Assets"/>
                                    <!-- 汉堡菜单图标 -->
                                </Button>
                                <ListBox ItemsSource="{Binding MainNavigationItems}"
                                         ItemContainerStyle="{StaticResource NavListBoxItemStyle}"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Icon}"
                                                        FontFamily="Segoe MDL2 Assets"
                                                        FontSize="20"
                                                        VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding DisplayName}" FontSize="15" VerticalAlignment="Center" Margin="15,0,0,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DataContext.IsLeftSidebarExpanded, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction
                                                Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ListBox>

                                <Separator Margin="20,10"
                                           Background="#444"/>
                                <TextBlock Text="我的"
                                           Style="{StaticResource SectionHeaderStyle}"
                                           Margin="10,20,20,10"/>

                                <!-- ======================= 第二个导航列表 ======================= -->
                                <ListBox ItemsSource="{Binding MyMusicNavigationItems}"
                                         ItemContainerStyle="{StaticResource NavListBoxItemStyle}"
                                         Background="Transparent"
                                        BorderThickness="0"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Icon}"
                                                        FontFamily="Segoe MDL2 Assets"
                                                        FontSize="20"
                                                        VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding DisplayName}"
                                                        FontSize="15"
                                                        VerticalAlignment="Center"
                                                        Margin="15,0,0,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction
                                                Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ListBox>
                                <!-- ================== 修改后的 Expander ================== -->
                                <Expander Style="{StaticResource NavExpanderStyle}">
                                    <!-- 头部 (Header) 保持不变 -->

                                    <ListBox ItemsSource="{Binding MoreNavigationItems}"
                                             ItemContainerStyle="{StaticResource NavListBoxItemStyle}"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                                        <!-- ItemTemplate 可以复用其他导航 ListBox 的模板 -->
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Icon}"
                                                            FontFamily="Segoe MDL2 Assets"
                                                            FontSize="20"
                                                            VerticalAlignment="Center"/>
                                                    <TextBlock Text="{Binding DisplayName}"
                                                            FontSize="15"
                                                            VerticalAlignment="Center"
                                                            Margin="15,0,0,0"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>

                                        <!-- 交互逻辑也完全复用 -->
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="SelectionChanged">
                                                <b:InvokeCommandAction
                                                    Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ListBox>
                                </Expander>

                                <Separator Margin="20,10"
                                           Background="#444"/>
                                <Expander IsExpanded="True"
                                          Foreground="#888888">
                                    <Expander.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!-- 左侧的标题和数量 -->
                                            <DockPanel Grid.Column="0" VerticalAlignment="Center">
                                                <TextBlock Text="收藏的歌单"/>
                                                <TextBlock Text="{Binding FavoritePlaylists.Count}" Margin="5,0,0,0"/>
                                            </DockPanel>

                                            <!-- 
                ================== 关键修改点 ==================
                右侧的“+”按钮
            -->
                                            <Button Grid.Column="1"
                    Content="&#xE710;" 
                                                FontFamily="Segoe MDL2 Assets"
                    FontSize="12"
                    Width="24" Height="24"
                    ToolTip="创建新歌单"
                    Command="{Binding CreatePlaylistCommand}">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <!-- 一个简单的透明背景圆形按钮样式 -->
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="#888"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="Cursor" Value="Hand"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Border Background="{TemplateBinding Background}" CornerRadius="12">
                                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="#3F3F3F"/>
                                                                <Setter Property="Foreground" Value="White"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                        </Grid>
                                    </Expander.Header>

                                    <ListBox
                                        ItemsSource="{Binding FavoritePlaylists}"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                        ItemContainerStyle="{StaticResource NavListBoxItemStyle}">
                                        <!-- 1. 当选中项改变时，触发统一的导航命令 -->
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="SelectionChanged">
                                                <b:InvokeCommandAction
                                                    Command="{Binding DataContext.NavigatePlaylistCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                    CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid ShowGridLines="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <!-- 封面图和VIP角标 -->
                                                    <Grid Grid.Column="0"
                                                          Width="40"
                                                          Height="40"
                                                          ShowGridLines="True">
                                                        <Border CornerRadius="4">
                                                            <Border.Background>
                                                                <ImageBrush ImageSource="{Binding CoverImageUrl}"
                                                                            Stretch="UniformToFill"/>
                                                            </Border.Background>
                                                        </Border>
                                                        <!-- VIP 角标，使用 Trigger 控制可见性 -->
                                                        <Border Background="#D93B3B"
                                                                CornerRadius="2"
                                                                Padding="3,1"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top"
                                                                Margin="-2,-2,0,0">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsVip}"
                                                                                     Value="True">
                                                                            <Setter Property="Visibility"
                                                                                    Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Border.Style>
                                                            <TextBlock Text="VIP"
                                                                       Foreground="White"
                                                                       FontSize="9"
                                                                       FontWeight="Bold"/>
                                                        </Border>
                                                    </Grid>

                                                    <!-- 使用单个TextBlock，并设置相关属性 -->
                                                    <TextBlock Grid.Column="1"
                                                               VerticalAlignment="Center"
                                                               Margin="10,0,0,0"
                                                               Foreground="White"
                                                               Text="{Binding Title}"
                                                               FontSize="10"
                                                               TextWrapping="Wrap"
                                                               TextTrimming="CharacterEllipsis"
                                                               LineHeight="14"
                                                               MaxHeight="28">

                                                        <TextBlock.ToolTip>
                                                            <ToolTip Content="{Binding Title}"/>
                                                        </TextBlock.ToolTip>

                                                    </TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Expander>


                            </StackPanel>
                        </Grid>

                    </ScrollViewer>
                    <!-- 右侧主视图：内容由ContentControl根据CurrentView动态显示 -->
                    <ContentControl Grid.Column="1"
                                    Content="{Binding CurrentView}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"/>



                </Grid>

                <!-- 3. 底部播放器控制条 (Grid.Row="2") -->
                <!-- 直接使用我们创建的 PlayerControlView 控件 -->
                <!-- 将 PlayerControlView 的 DataContext 绑定到 MainViewModel 的 PlayerControlVM 属性 -->
                <components:PlayerControlView Grid.Row="2"
                                              DataContext="{Binding PlayerControlVM}"/>

                <MediaElement x:Name="MediaPlayer"
                              LoadedBehavior="Manual"
                              UnloadedBehavior="Stop"
                              Visibility="Collapsed"/>
            </Grid>

            <Grid x:Name="SignUpOverlayGrid"
                  Background="#A0000000">

                <Grid.Style>
                    <Style TargetType="Grid">
                        <!-- 1. 默认状态：不可见 -->
                        <Setter Property="Visibility"
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <!-- 2. 当 IsOverlayVisible 为 True 时 -->
                            <DataTrigger Binding="{Binding IsOverlayVisible}"
                                         Value="True">
                                <!-- 2a. 让遮罩层可见 -->
                                <Setter Property="Visibility"
                                        Value="Visible"/>

                            </DataTrigger>
                            <!-- 当 IsOverlayVisible 变回 False 时，Setter 的效果会自动撤销 -->
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <!-- 注册面板，居中显示 -->
                <pages:SignUpView
                    DataContext="{Binding AuthVM}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="700"
                    Width="1000"/>
            </Grid>
        </Grid>

    </Border>
</Window>
