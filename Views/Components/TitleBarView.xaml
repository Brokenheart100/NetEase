<UserControl x:Class="NetEase.Views.Components.TitleBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NetEase.Views.Components" 
             xmlns:viewmodels="clr-namespace:NetEase.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:TitleBarViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="1000">
    <UserControl.Resources>
        <!-- 标题栏图标按钮样式 -->
        <Style x:Key="TitleBarIconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <TextBlock Text="{TemplateBinding Content}" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3F3F3F"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 自定义搜索框样式 -->
        <Style x:Key="SearchBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#2A2A2D"/>
            <Setter Property="Foreground" Value="#A0A0A0"/>
            <Setter Property="BorderBrush" Value="#444"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="30,5,5,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <!-- 搜索框背景和边框 -->
                            <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"/>

                            <!-- 搜索图标 -->
                            <TextBlock Text="&#xE721;" FontFamily="Segoe MDL2 Assets" 
                               FontSize="16" Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="8,0,0,0" IsHitTestVisible="False"/>

                            <!-- 水印提示文本 -->
                            <TextBlock x:Name="Watermark" Text="搜索" 
                               Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="32,0,0,0" IsHitTestVisible="False"
                               Visibility="Collapsed"/>

                            <!-- 文本输入区域 -->
                            <ScrollViewer x:Name="PART_ContentHost"
                                  VerticalAlignment="Center"
                                  Margin="2,0,2,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#666"/>
                            </Trigger>
                            <!-- 当文本为空时显示水印 -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <!-- 1. 自定义标题栏 (Grid.Row="0") -->
    <Grid Grid.Row="0" Background="#2C2C2C" ShowGridLines="True">
        <!-- 附加 MouseLeftButtonDown 事件以实现窗口拖动 -->
        <Grid.InputBindings>
            <MouseBinding Gesture="LeftClick" Command="{Binding DragWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
        </Grid.InputBindings>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <!-- Logo 和文字 -->
            <ColumnDefinition Width="Auto"/>
            <!-- 历史记录按钮 -->
            <ColumnDefinition Width="*"/>
            <!-- 搜索框 -->
            <ColumnDefinition Width="Auto"/>
            <!-- 用户信息和功能按钮 -->
            <ColumnDefinition Width="Auto"/>
            <!-- 窗口控制按钮 -->
        </Grid.ColumnDefinitions>

        <!-- Logo 和文字 -->
        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,20,0">
            <!-- 这里放置您的 Logo 图片 -->
            <Image Source="E:\Computer\VS\NetEase\CoverImage\26.jpg" Width="24" Height="24"/>
            <TextBlock Text="网易云音乐" Foreground="White " FontSize="16" VerticalAlignment="Center" Margin="10,0,0,0"/>
        </StackPanel>

        <!-- 历史记录按钮 -->
        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="120,0,0,0">
            <Button Content="&#xE72B;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="后退"/>
            <Button Content="&#xE72A;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="前进"/>
        </StackPanel>

        <!-- 搜索框 -->
        <Grid Grid.Column="2" VerticalAlignment="Center" Margin="20,0">
            <TextBox Style="{StaticResource SearchBoxStyle}" Width="250" Height="30"/>
            <Button Content="&#xE78B;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="语音搜索" HorizontalAlignment="Right" Margin="0,0,5,0"/>
        </Grid>

        <!-- 用户信息和功能按钮 -->
        <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center">
            <!-- 用户头像和名称 -->
            <Button Cursor="Hand"
                    Command="{Binding DataContext.ShowSignUpCommand, RelativeSource={RelativeSource AncestorType=Window}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <!-- 默认状态下的背景和前景颜色 -->
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="#A0A0A0"/>
                        <!-- 默认字体颜色 (灰色) -->
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <!-- 使用 Border 作为背景 -->
                                    <Border x:Name="buttonBorder" 
                                Background="{TemplateBinding Background}"
                                CornerRadius="4" 
                                Padding="4">
                                        <!--
                                ContentPresenter 会显示我们的 StackPanel。
                                我们需要一种方法来将 Foreground 颜色传递给 StackPanel 里的 TextBlock。
                            -->
                                        <ContentPresenter/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <!-- 当鼠标悬浮时 -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!-- 1. 改变背景色 -->
                                            <Setter TargetName="buttonBorder" Property="Background" Value="#3F3F3F"/>
                                            <!-- 2. 改变字体颜色 -->
                                            <!-- 这里的 Setter 会改变 Button 自身的 Foreground 属性 -->
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>

                <!-- 按钮的内容 -->
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="28" Height="28">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="E:\Computer\VS\NetEase\CoverImage\31.jpg"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <!-- 
            关键修改点：
            将 TextBlock 的 Foreground 绑定到 Button 自身的 Foreground 属性。
            这样，当 Trigger 改变 Button 的 Foreground 时，TextBlock 的颜色也会随之改变。
        -->
                    <TextBlock Text="Brokenheart100" 
                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                   VerticalAlignment="Center" 
                   Margin="8,0"/>
                </StackPanel>
            </Button>
            <!-- 其他图标按钮 -->
            <Button Content="&#xE716;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="设置"/>
            <Button Content="&#xE715;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="邮件"/>
            <Button Content="&#xE787;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="皮肤"/>
            <Button Content="&#xE7F8;" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="小窗模式"/>
            </StackPanel>

            <!-- 窗口控制按钮 -->
            <StackPanel Grid.Column="4" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0">
                <Button Content="&#xE921;" Command="{Binding MinimizeWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="最小化"/>
                <Button Content="&#xE922;" Command="{Binding MaximizeWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="最大化"/>
                <Button Content="&#xE8BB;" Command="{Binding CloseWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Style="{StaticResource TitleBarIconButtonStyle}" ToolTip="关闭"/>
            </StackPanel>
    </Grid>
</UserControl>
